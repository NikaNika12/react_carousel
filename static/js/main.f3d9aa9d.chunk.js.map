{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","nextSliderHandler","props","images","itemWidth","step","frameSize","infinite","hiddenWidth","length","setState","prevState","prevSliderHandler","this","animationDuration","className","style","width","map","image","i","height","src","alt","transition","transform","type","onClick","React","Component","App","changeValueHandler","e","target","name","value","infiniteHandler","action","method","htmlFor","id","min","onChange","max","checked","ReactDOM","render","document","getElementById"],"mappings":"qQAgBaA,EAAb,4MACEC,MAAQ,CACNC,SAAU,GAFd,EAKEC,kBAAoB,WAClB,MAMI,EAAKC,MALPC,EADF,EACEA,OACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,SAGIC,GAAeL,EAAOM,OAASH,GAAaF,EAE9C,EAAKL,MAAMC,SAAWI,EAAYC,EAAOG,EAC3C,EAAKE,UAAS,SAAAC,GAAS,MACrB,CAAEX,SAAUW,EAAUX,SAAWI,EAAYC,MACtC,EAAKN,MAAMC,WAAaQ,GAAeD,EAChD,EAAKG,SAAS,CAAEV,SAAU,IAE1B,EAAKU,UAAS,SAAAC,GAAS,MACrB,CAAEX,SAAUW,EAAUX,UAAYQ,EAAcG,EAAUX,eAvBlE,EA4BEY,kBAAoB,WAClB,MAMI,EAAKV,MALPC,EADF,EACEA,OACAC,EAFF,EAEEA,UACAE,EAHF,EAGEA,UACAD,EAJF,EAIEA,KACAE,EALF,EAKEA,SAGIC,GAAeL,EAAOM,OAASH,GAAaF,EAE9C,EAAKL,MAAMC,SAAWI,EAAYC,EAAO,EAC3C,EAAKK,UAAS,SAAAC,GAAS,MACrB,CAAEX,SAAUW,EAAUX,SAAWI,EAAYC,MACd,IAAxB,EAAKN,MAAMC,UAAkBO,EACtC,EAAKG,UAAS,SAAAC,GAAS,MACrB,CAAEX,SAAUW,EAAUX,UAAYQ,EAAcG,EAAUX,cAG5D,EAAKU,SAAS,CAAEV,SAAU,KA/ChC,4CAmDE,WAAU,IAAD,OACP,EAKIa,KAAKX,MAJPC,EADF,EACEA,OACAG,EAFF,EAEEA,UACAF,EAHF,EAGEA,UACAU,EAJF,EAIEA,kBAGF,OACE,sBAAKC,UAAU,WAAf,UACE,oBACEC,MAAO,CAAEC,MAAM,GAAD,OAAKX,EAAYF,EAAY,EAA7B,OACdW,UAAU,iBAFZ,SAIGZ,EAAOe,KAAI,SAACC,EAAOC,GAAR,OACV,oBAEEJ,MAAO,CACLC,MAAM,GAAD,OAAKb,EAAL,MACLiB,OAAO,GAAD,OAAKjB,EAAL,OAJV,SAOE,qBACEW,UAAU,QACVO,IAAKH,EACLI,IAAG,UAAKH,EAAI,GACZH,MAAOb,EACPiB,OAAQjB,EACRY,MAAO,CACLQ,WAAW,aAAD,OAAeV,EAAf,MACVW,UAAU,eAAD,OAAiB,EAAK1B,MAAMC,SAA5B,WAdRmB,QAqBX,sBAAKJ,UAAU,oBAAf,UACE,wBACEA,UAAU,4BACVW,KAAK,SACLC,QAASd,KAAKD,kBAHhB,kBAQA,wBACEG,UAAU,4BACVW,KAAK,SACL,UAAQ,OACRC,QAASd,KAAKZ,kBAJhB,4BAjGV,GAA8B2B,IAAMC,WCH9BC,E,4MACJ/B,MAAQ,CACNI,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFE,KAAM,EACNC,UAAW,EACXF,UAAW,IACXU,kBAAmB,IACnBP,UAAU,G,EAGZwB,mBAAqB,SAACC,GACpB,EAAKtB,UAAS,SAAAX,GAAK,kCACdA,GADc,kBAEhBiC,EAAEC,OAAOC,MAAQF,EAAEC,OAAOE,Y,EAI/BC,gBAAkB,WAChB,EAAK1B,UAAS,SAAAX,GAAK,MAAK,CACtBQ,UAAWR,EAAMQ,c,4CAIrB,WACE,MAOIM,KAAKd,MANPI,EADF,EACEA,OACAE,EAFF,EAEEA,KACAC,EAHF,EAGEA,UACAF,EAJF,EAIEA,UACAU,EALF,EAKEA,kBACAP,EANF,EAMEA,SAGF,OACE,sBAAKQ,UAAU,MAAf,UACE,oBACE,UAAQ,QACRA,UAAU,aAFZ,iCAIoBZ,EAAOM,OAJ3B,aAOA,cAAC,EAAD,CACEN,OAAQA,EACRE,KAAMA,EACNC,UAAWA,EACXF,UAAWA,EACXU,kBAAmBA,EACnBP,SAAUA,IAGZ,uBAAM8B,OAAO,GAAGC,OAAO,MAAMvB,UAAU,OAAvC,UACE,sBAAKA,UAAU,eAAf,UACE,uBAAOwB,QAAQ,UAAf,yBAGA,uBACEC,GAAG,UACHd,KAAK,SACLX,UAAU,cACVmB,KAAK,YACLC,MAAO/B,EACPqC,IAAI,IACJC,SAAU7B,KAAKkB,wBAInB,sBAAKhB,UAAU,eAAf,UACE,uBAAOwB,QAAQ,UAAf,yBAGA,uBACEC,GAAG,UACHd,KAAK,SACLX,UAAU,cACVmB,KAAK,YACLC,MAAO7B,EACPmC,IAAI,IACJE,IAAKxC,EAAOM,OACZiC,SAAU7B,KAAKkB,wBAInB,sBAAKhB,UAAU,eAAf,UACE,uBAAOwB,QAAQ,SAAf,mBAGA,uBACEC,GAAG,SACHd,KAAK,SACLX,UAAU,cACVmB,KAAK,OACLC,MAAO9B,EACPoC,IAAI,IACJE,IAAKxC,EAAOM,OAASH,EACrBoC,SAAU7B,KAAKkB,wBAInB,sBAAKhB,UAAU,eAAf,UACE,uBAAOwB,QAAQ,cAAf,iCAGA,uBACEC,GAAG,cACHd,KAAK,SACLX,UAAU,cACVmB,KAAK,oBACLC,MAAOrB,EACP4B,SAAU7B,KAAKkB,wBAInB,sBAAKhB,UAAU,eAAf,UACE,uBAAOwB,QAAQ,aAAf,sBAGA,uBACEC,GAAG,aACHd,KAAK,WACLX,UAAU,cACVmB,KAAK,WACLU,QAASrC,EACTmC,SAAU7B,KAAKuB,+B,GAtIXR,IAAMC,WA+ITC,ICzJfe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f3d9aa9d.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  position: number,\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  nextSliderHandler = () => {\n    const {\n      images,\n      itemWidth,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n\n    const hiddenWidth = (images.length - frameSize) * itemWidth;\n\n    if (this.state.position + itemWidth * step < hiddenWidth) {\n      this.setState(prevState => (\n        { position: prevState.position + itemWidth * step }));\n    } else if (this.state.position === hiddenWidth && infinite) {\n      this.setState({ position: 0 });\n    } else {\n      this.setState(prevState => (\n        { position: prevState.position + (hiddenWidth - prevState.position) }\n      ));\n    }\n  };\n\n  prevSliderHandler = () => {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      infinite,\n    } = this.props;\n\n    const hiddenWidth = (images.length - frameSize) * itemWidth;\n\n    if (this.state.position - itemWidth * step > 0) {\n      this.setState(prevState => (\n        { position: prevState.position - itemWidth * step }));\n    } else if (this.state.position === 0 && infinite) {\n      this.setState(prevState => (\n        { position: prevState.position + (hiddenWidth - prevState.position) }\n      ));\n    } else {\n      this.setState({ position: 0 });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          style={{ width: `${frameSize * itemWidth - 1}px` }}\n          className=\"Carousel__list\"\n        >\n          {images.map((image, i) => (\n            <li\n              key={image}\n              style={{\n                width: `${itemWidth}px`,\n                height: `${itemWidth}px`,\n              }}\n            >\n              <img\n                className=\"Image\"\n                src={image}\n                alt={`${i + 1}`}\n                width={itemWidth}\n                height={itemWidth}\n                style={{\n                  transition: `transform ${animationDuration}ms`,\n                  transform: `translateX(-${this.state.position}px)`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__buttons__button\"\n            type=\"button\"\n            onClick={this.prevSliderHandler}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"Carousel__buttons__button\"\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={this.nextSliderHandler}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeValueHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState(state => ({\n      ...state,\n      [e.target.name]: +e.target.value,\n    }));\n  };\n\n  infiniteHandler = () => {\n    this.setState(state => ({\n      infinite: !state.infinite,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          data-cy=\"title\"\n          className=\"App__title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form action=\"\" method=\"get\" className=\"Form\">\n          <div className=\"Form__inputs\">\n            <label htmlFor=\"widthId\">\n              Item width:\n            </label>\n            <input\n              id=\"widthId\"\n              type=\"number\"\n              className=\"Form__input\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min=\"0\"\n              onChange={this.changeValueHandler}\n            />\n          </div>\n\n          <div className=\"Form__inputs\">\n            <label htmlFor=\"frameId\">\n              Frame size:\n            </label>\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              className=\"Form__input\"\n              name=\"frameSize\"\n              value={frameSize}\n              min=\"1\"\n              max={images.length}\n              onChange={this.changeValueHandler}\n            />\n          </div>\n\n          <div className=\"Form__inputs\">\n            <label htmlFor=\"stepId\">\n              Step:\n            </label>\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              className=\"Form__input\"\n              name=\"step\"\n              value={step}\n              min=\"1\"\n              max={images.length - frameSize}\n              onChange={this.changeValueHandler}\n            />\n          </div>\n\n          <div className=\"Form__inputs\">\n            <label htmlFor=\"animationId\">\n              Animation duration:\n            </label>\n            <input\n              id=\"animationId\"\n              type=\"number\"\n              className=\"Form__input\"\n              name=\"animationDuration\"\n              value={animationDuration}\n              onChange={this.changeValueHandler}\n            />\n          </div>\n\n          <div className=\"Form__inputs\">\n            <label htmlFor=\"infiniteId\">\n              Infinite\n            </label>\n            <input\n              id=\"infiniteId\"\n              type=\"checkbox\"\n              className=\"Form__input\"\n              name=\"infinite\"\n              checked={infinite}\n              onChange={this.infiniteHandler}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}